{"version":3,"sources":["List.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","items","map","item","key","className","completed","task","role","onClick","markAsCompleted","id","removeTask","Todo","useState","setTask","setItems","useEffect","uuidv4","onSubmit","e","preventDefault","trim","value","onChange","target","find","filteredTasks","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA0BeA,EAvBF,SAACC,GAAD,OACX,6BACGA,EAAMC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACf,qBAAcC,UAAS,UAAKF,EAAKG,UAAY,YAAc,WAA3D,UACGH,EAAKI,KAEN,sBAAKF,UAAU,UAAf,UACE,sBACEG,KAAK,SACLH,UAAWF,EAAKG,UAAY,OAAS,OACrCG,QAAS,kBAAMT,EAAMU,gBAAgBP,EAAKQ,KAH5C,SAKE,mBAAGN,UAAU,kBAEf,sBAAMG,KAAK,SAASH,UAAU,QAAQI,QAAS,kBAAMT,EAAMY,WAAWT,EAAKQ,KAA3E,SACE,mBAAGN,UAAU,uBAZVD,SC6DAS,G,MA5DF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRP,EADQ,KACFQ,EADE,OAEWD,mBAAS,IAFpB,mBAERb,EAFQ,KAEDe,EAFC,KAIfC,qBAAU,WACND,EAAS,CAAC,CACNL,GAAIO,MACJX,KAAM,eACND,WAAW,GAEb,CACEK,GAAIO,MACJX,KAAM,gBACND,WAAW,GAEb,CACEK,GAAIO,MACJX,KAAM,iBACND,WAAW,OAEhB,IA6BH,OACI,sBAAKD,UAAU,OAAf,UACI,4CACA,uBAAMc,SA9BS,SAACC,GACpBA,EAAEC,iBACkB,KAAhBd,EAAKe,SACLN,EAAS,GAAD,mBAAKf,GAAL,CAAY,CAAEU,GAAIO,MAAUX,KAAMA,EAAMD,WAAW,MAC3DS,EAAQ,MA0BR,UACI,uBAAOQ,MAAOhB,EAAMiB,SAvBT,SAACJ,GAAO,IAEbG,EACVH,EADAK,OAAUF,MAEdR,EAAQQ,MAmBiD,OAErD,cAAC,EAAD,CAAMtB,MAAOA,EAAOS,gBAlBJ,SAACC,GACHV,EAAMyB,MAAK,SAACnB,GAAD,OAAUA,EAAKI,KAAOA,KACzCL,WAAY,EACtBU,EAAS,YAAIf,KAe6CW,WAZ3C,SAACD,GAChB,IAAMgB,EAAgB1B,EAAM2B,QAAO,SAACrB,GAAD,OAAUA,EAAKI,KAAOA,KACzDK,EAASW,MAU4E,SCnD9EE,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.efb20892.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\n\nconst List = (props) => (\n  <ul>\n    {props.items.map((item, key) => (\n      <li key={key} className={`${item.completed ? 'completed' : 'pending'}`}>\n        {item.task}\n\n        <div className=\"actions\">\n          <span\n            role=\"button\"\n            className={item.completed ? 'hide' : 'done'}\n            onClick={() => props.markAsCompleted(item.id)}\n          >\n            <i className=\"fa fa-check\" />\n          </span>\n          <span role=\"button\" className=\"trash\" onClick={() => props.removeTask(item.id)}>\n            <i className=\"fa fa-trash\" />\n          </span>\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport List from './List';\n\nimport './Todo.css';\n\nconst Todo = () => {\n    const [task, setTask] = useState('');\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems([{\n            id: uuidv4(),\n            task: 'Pay the rent',\n            completed: false,\n          },\n          {\n            id: uuidv4(),\n            task: 'Go to the gym',\n            completed: false,\n          },\n          {\n            id: uuidv4(),\n            task: 'Do my homework',\n            completed: false,\n          }]);\n    }, [])\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (task.trim() !== '') {\n            setItems([...items, { id: uuidv4(), task: task, completed: false }])\n            setTask('');\n        }\n    }\n\n    const handleOnChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setTask(value);\n    }\n\n    const markAsCompleted = (id) => {\n        const foundTask = items.find((task) => task.id === id);\n        foundTask.completed = true;\n        setItems([...items]);\n    }\n\n    const removeTask = (id) => {\n        const filteredTasks = items.filter((task) => task.id !== id);\n        setItems(filteredTasks);\n    }\n\n\n    return (\n        <div className=\"Todo\">\n            <h1> New Task </h1>\n            <form onSubmit={handleOnSubmit}>\n                <input value={task} onChange={handleOnChange} />{' '}\n            </form>\n            <List items={items} markAsCompleted={markAsCompleted} removeTask={removeTask} />{' '}\n        </div>\n    );\n}\n\nexport default Todo;\n","import './App.css';\nimport Todo from './Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}